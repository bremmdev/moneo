---
import { db, Reminder, gt, and, eq } from "astro:db";

import AddIcon from "@assets/icons/add.svg";
import { Image } from "astro:assets";
import ReminderCard from "@components/ReminderCard.astro";

type Props = {
  limit?: number;
};

const { limit } = Astro.props;

const baseQuery = db
  .select()
  .from(Reminder)
  .where(and(gt(Reminder.endDate, new Date()), eq(Reminder.completed, false)))
  .orderBy(Reminder.endDate);

let reminders: Array<typeof Reminder.$inferSelect>;

if (limit) {
  reminders = await baseQuery.limit(limit);
} else {
  reminders = await baseQuery;
}
---

<section id="reminders">
  <header
    class="flex justify-center flex-col lg:flex-row items-center relative"
  >
    <h2
      class="text-center text-3xl font-bold tracking-tighter text-sky-300 md:text-5xl"
    >
      Active Reminders
    </h2>
    <a
      href="/reminder/new"
      class="lg:absolute lg:right-0 translate-y-1 w-fit focus-visible:ring-ring ring-offset-amber-300 ring-amber-300 my-4 inline-flex items-center justify-center rounded-md bg-sky-300 px-4 py-2 text-sm font-medium text-slate-900 transition-colors hover:opacity-90 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-offset-1 disabled:pointer-events-none disabled:opacity-50"
      >Create Reminder<Image
        src={AddIcon}
        alt="Add Icon"
        class="w-5 h-5 ml-1"
      /></a
    >
  </header>
  {
    reminders.length === 0 && (
      <p class="text-center my-8 text-base">There are no active reminders.</p>
    )
  }

  {
    reminders.length > 0 && (
      <ul class="flex flex-wrap gap-4 my-8 lg:my-12 text-sm text-slate-300">
        {reminders.map((r) => (
          <ReminderCard reminder={r} status="active" />
        ))}
      </ul>
    )
  }
</section>
