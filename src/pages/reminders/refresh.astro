---
export const partial = true;
import ActiveReminders from "@components/ActiveReminders.astro";
import ExpiredReminders from "@components/ExpiredReminders.astro";

const limitParam = Astro.url.searchParams.get("limit");
const type = Astro.url.searchParams.get("type");
const limit = limitParam ? parseInt(limitParam) : undefined;

if (type && type !== "active" && type !== "expired") {
  return new Response("Invalid type", { status: 400 });
}

//we need to return the same URL with the same limit and type in the response
const refreshParams = new URLSearchParams();
if (type) refreshParams.set("type", type);
if (limit) refreshParams.set("limit", limit.toString());
---

<div
  id="reminders-container"
  hx-get=`/reminders/refresh?${refreshParams.toString()}`
  hx-trigger="every 60s"
  hx-swap="outerHTML transition:true"
>
  {(!type || type === "active") && <ActiveReminders limit={limit} />}
  {(!type || type === "expired") && <ExpiredReminders limit={limit} />}
</div>
