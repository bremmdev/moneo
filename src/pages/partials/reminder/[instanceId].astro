---
import { db, Reminder, eq } from "astro:db";
const instanceId = Astro.params.instanceId;

const ACCESS_KEY = import.meta.env.ACCESS_KEY;
const ORCHESTRATOR_TERMINATE_URL = import.meta.env.ORCHESTRATOR_TERMINATE_URL;
const TASK_HUB = import.meta.env.TASK_HUB;

try {
  const res = await fetch(
    `${ORCHESTRATOR_TERMINATE_URL}${instanceId}/terminate?taskHub=${TASK_HUB}&connection=Storage&code=${ACCESS_KEY}`,
    {
      method: "POST",
    }
  );

  if (!res.ok) {
    console.log(res.statusText);
    return new Response("Could not terminate instance", { status: 500 });
  }

  // await db.delete(Reminder).where(eq(Reminder.orchestrationId, instanceId as string));

  return new Response(null, { status: 200 });
} catch (error) {
  console.error(error);
  return new Response("Could not terminate instance", { status: 500 });
}
---
